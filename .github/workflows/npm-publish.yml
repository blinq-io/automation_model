# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Javascript client CI

on:
  push:
    branches: ["main"]


permissions:
    contents: write


jobs:
  build-javascript-client:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - run: npm install
        working-directory: ${{ github.workspace }}
      - name: Install Playwright dependencies
        run: npx playwright install --with-deps
        working-directory: ${{ github.workspace }}


      - name: Fetch current version from npm with tag 'latest'
        id: npm_version
        run: |
          version=$(npm show automation_model@latest version)
          echo "version=$version" >> $GITHUB_ENV

      - name: Increment version
        id: increment-version
        run: |
          current_version=${{ env.version }}
          IFS='.' read -r -a version_parts <<< "$current_version"
          patch_version=$((version_parts[2]+1))
          NEW_VERSION="${version_parts[0]}.${version_parts[1]}.${patch_version}"

          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Update package.json with new version
        run: |
          jq --arg new_version "${{ env.new_version }}" '.version = $new_version' "${{ github.workspace }}/package.json" > "${{ github.workspace }}/package.json.tmp" && mv "${{ github.workspace }}/package.json.tmp" "${{ github.workspace }}/package.json"

      - name: Update package-lock.json
        run: npm install --package-lock-only
        working-directory: ${{ github.workspace }}



      - run: npm run build
        working-directory: ${{ github.workspace }}
      - run: npm test
        working-directory: ${{ github.workspace }}
      - name: publish server to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_PASSWORD }}
          package: ${{ github.workspace }}/build/package.json
          check-version: true
